{"mappings":"0fAAA,MAAMA,EAAO,CAACC,EAAKC,KACjB,IACE,MAAMC,EAAkBC,KAAKC,UAAUH,GACvCI,aAAaC,QAAQN,EAAKE,EAG5B,CAFE,MAAOK,GACPC,QAAQD,MAAM,oBAAqBA,EAAME,QAC3C,G,iBCOFV,EAAkB,WARY,CAC5B,2BACA,2BACA,2BACA,2BACA,2BACA,6BAKF,IAAIW,EAAc,GAClB,MAAMC,EAAYC,SAASC,cAAc,eACnCC,EAAgBF,SAASC,cAAc,mBAC7CC,EAAcC,MAAMC,QAAU,OAG9B,MAmEMC,EAAaC,IACjBA,EAAMC,SAAQC,KACZ,EAAAC,EAAAC,aAAYF,GACTG,MAAKC,GAtEO,CAAAC,IACjB,MAAMC,IAAEA,EAAGC,WAAEA,EAAUC,MAAEA,EAAKC,UAAEA,EAASC,YAAEA,EAAWC,OAAEA,EAAMC,UAAEA,GAAcP,EACxEQ,EAAS,8KAGuDP,kIAKnDC,mPAOwBC,yDACGC,2EAEhCC,gMAK+BC,4NAMjBC,EAAU,GAAGE,snBAcbF,EAAU,GAAGE,4nBAkBzCvB,EAAUwB,mBAAmB,YAAaF,EAAA,EAQ7BG,CAAWZ,EAAKa,QAExBC,OAAM/B,IACLC,QAAQ+B,IAAIhC,EAAA,GACd,GACJ,EAIFiC,OAAOC,iBAAiB,QAAQ,KAG9B,GAFA9B,EAAU+B,UAAY,GACtBhC,ED/FW,CAAAV,IACX,IACE,MAAME,EAAkBG,aAAasC,QAAQ3C,GAC7C,OAA2B,OAApBE,OAA2B0C,EAAYzC,KAAK0C,MAAM3C,EAG3D,CAFE,MAAOK,GACPC,QAAQD,MAAM,oBAAqBA,EAAME,QAC3C,GCyFcqC,CAAkB,YACL,IAAvBpC,EAAYqC,OAGd,OAFAjC,EAAcC,MAAMC,QAAU,YAC9BL,EAAUqC,oBAAoB,QAASC,GAGzChC,EAAWP,GACXC,EAAU8B,iBAAiB,QAASQ,EAAA,IAItC,MAeMA,EAAoBC,IACxB,IAAKA,EAAMC,OAAOC,UAAUC,SAAS,sBACnC,OAjBe,CAAAC,IACjB,MAAMC,EAAgB7C,EAAY8C,QAAQF,GAK1C,GAJA5C,EAAY+C,OAAOF,EAAe,GAClCxD,EAAkB,WAAYW,GAC9BC,EAAU+B,UAAY,GAEK,IAAvBhC,EAAYqC,OAGd,OAFAjC,EAAcC,MAAMC,QAAU,YAC9BL,EAAUqC,oBAAoB,QAASC,GAGzChC,EAAWP,EAAA,EASXgD,CADqBR,EAAMC,OAAOQ,QAAQC,GAC/B,E","sources":["src/js/local-storage.js","src/js/shopping-list.js"],"sourcesContent":["const save = (key, value) => {\n  try {\n    const serializedState = JSON.stringify(value);\n    localStorage.setItem(key, serializedState);\n  } catch (error) {\n    console.error('Set state error: ', error.message);\n  }\n};\n\nconst load = key => {\n  try {\n    const serializedState = localStorage.getItem(key);\n    return serializedState === null ? undefined : JSON.parse(serializedState);\n  } catch (error) {\n    console.error('Get state error: ', error.message);\n  }\n};\n\nconst remove = key => {\n  try {\n    localStorage.removeItem(key);\n  } catch (error) {\n    console.error('Remove state error: ', error.message);\n  }\n};\n\nexport { save, load, remove };\n\n// Jak używać:\n// - zaimportować w swoim pliku js:\n// import * as localStorage from \"/local-storage.js\"\n// - wywołać, przykład:\n// const dog = {\n//   name: \"Mango\",\n//   age: 3,\n//   isHappy: true,\n// };\n\n// localStorage.save(\"dog\", dog);\n// const doggy = localStorage.load(\"dog\");\n","import * as localStorage from './local-storage.js';\nimport { getBooksApi } from './api.js';\n\n// Simulation of adding books to Shopping List (Local Storage) //\n// It will be deleted when adding books Ids to Local Storage from main page will work //\nconst booksIdToLocalStorage = [\n  '643282b1e85766588626a0dc',\n  '643282b1e85766588626a0ba',\n  '643282b1e85766588626a0b8',\n  '643282b1e85766588626a0c2',\n  '643282b1e85766588626a0be',\n  '643282b2e85766588626a110',\n];\nlocalStorage.save('test-Ids', booksIdToLocalStorage);\n// ----------------------------------------------------------- //\n\nlet booksIdList = [];\nconst cardsList = document.querySelector('.cards-list');\nconst shoppingEmpty = document.querySelector('.shopping-empty');\nshoppingEmpty.style.display = 'none';\n\n// Function: Creating book-card markup and adding to DOM //\nconst showMyBook = myBook => {\n  const { _id, book_image, title, list_name, description, author, buy_links } = myBook;\n  const markup = `<li class=\"card-item\">\n        <div class=\"card-item__box\">\n          <div class=\"remove-button\">\n            <button type=\"button\" class=\"remove-button__box\" data-id=\"${_id}\">\n            </button>\n          </div>\n          <div class=\"card-item__img-box\">\n            <img\n              src=\"${book_image}\"\n              alt=\"Book cover\"\n              class=\"card-item__img\"\n            />\n          </div>\n          <div class=\"card-item__info\">\n            <div class=\"card-item__info-body\">\n              <h2 class=\"card-item__title\">${title}</h2>\n              <h3 class=\"card-item__category\">${list_name}</h3>\n              <p class=\"card-item__description\">\n              ${description}\n              </p>\n            </div>\n            <div class=\"card-item__info-footer\">\n              <div class=\"card-item__author-box\">\n                <p class=\"card-item__author\">${author}</p>\n              </div>\n              <div class=\"card-item__shops\">\n                <ul class=\"shops-list\">\n                  <li class=\"shops-list__item\">\n                    <a\n                      href=\"${buy_links[0].url}\"\n                      target=\"_blank\"\n                      rel=\"nofollow noopener noreferrer\"\n                      class=\"shops-list__link\"\n                      ><div class=\"shops-list__icon-box shops-list__icon-box--amazon\">\n                        <img\n                          src=\"./images/amazon-light-mode.svg\"\n                          alt=\"Amazon logo\"\n                          class=\"shops-list__icon-img-amazon\"\n                        /></div\n                    ></a>\n                  </li>\n                  <li class=\"shops-list__item\">\n                    <a\n                      href=\"${buy_links[1].url}\"\n                      target=\"_blank\"\n                      rel=\"nofollow noopener noreferrer\"\n                      class=\"shops-list__link\"\n                      ><div class=\"shops-list__icon-box shops-list__icon-box--apple\">\n                        <img\n                          src=\"./images/apple-books.svg\"\n                          alt=\"Apple Books logo\"\n                          class=\"shops-list__icon-img-apple\"\n                        /></div\n                    ></a>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n      </li>`;\n  cardsList.insertAdjacentHTML('beforeend', markup);\n};\n\n// Fetch books by IDs from array and render list //\nconst renderList = array => {\n  array.forEach(bookID => {\n    getBooksApi(bookID)\n      .then(book => {\n        return showMyBook(book.data);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  });\n};\n\n// Load / refresh page event listener //\nwindow.addEventListener('load', () => {\n  cardsList.innerHTML = '';\n  booksIdList = localStorage.load('test-Ids'); // <--- change \"key\" - test-Ids\n  if (booksIdList.length === 0) {\n    shoppingEmpty.style.display = 'flex';\n    cardsList.removeEventListener('click', removeCardHandler);\n    return;\n  }\n  renderList(booksIdList);\n  cardsList.addEventListener('click', removeCardHandler);\n});\n\n// Function: remove card by book ID //\nconst removeCard = cardId => {\n  const indexToRemove = booksIdList.indexOf(cardId);\n  booksIdList.splice(indexToRemove, 1);\n  localStorage.save('test-Ids', booksIdList); // <--- change \"key\" - test-Ids\n  cardsList.innerHTML = '';\n\n  if (booksIdList.length === 0) {\n    shoppingEmpty.style.display = 'flex';\n    cardsList.removeEventListener('click', removeCardHandler);\n    return;\n  }\n  renderList(booksIdList);\n};\n\n// Event handler: remove button \"click\" //\nconst removeCardHandler = event => {\n  if (!event.target.classList.contains('remove-button__box')) {\n    return;\n  }\n  const removeCardId = event.target.dataset.id;\n  removeCard(removeCardId);\n};\n"],"names":["$80b576907cf5d791$export$a1544dad697b423d","key","value","serializedState","JSON","stringify","localStorage","setItem","error","console","message","$75d8a6bcc5c56d80$var$booksIdList","$75d8a6bcc5c56d80$var$cardsList","document","querySelector","$75d8a6bcc5c56d80$var$shoppingEmpty","style","display","$75d8a6bcc5c56d80$var$renderList","array","forEach","bookID","$lXnOV","getBooksApi","then","book","myBook","_id","book_image","title","list_name","description","author","buy_links","markup","url","insertAdjacentHTML","$75d8a6bcc5c56d80$var$showMyBook","data","catch","log","window","addEventListener","innerHTML","getItem","undefined","parse","$80b576907cf5d791$export$11e63f7b0f3d9900","length","removeEventListener","$75d8a6bcc5c56d80$var$removeCardHandler","event","target","classList","contains","cardId","indexToRemove","indexOf","splice","$75d8a6bcc5c56d80$var$removeCard","dataset","id"],"version":3,"file":"shopping-list.8ba9061b.js.map"}