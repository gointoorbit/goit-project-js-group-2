{"mappings":"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","sources":["src/js/modal.js","src/js/books-list.js"],"sourcesContent":["(() => {\n    const refs = {\n      openModalBtn: document.querySelector(\"[btn-modal-open]\"),\n      closeModalBtn: document.querySelector(\"[close-btn]\"),\n      modal: document.querySelector(\"[data-modal]\"),\n    };\n\n    refs.openModalBtn.addEventListener(\"click\", toggleModal);\n    refs.closeModalBtn.addEventListener(\"click\", toggleModal);\n\n    function toggleModal() {\n      refs.modal.classList.toggle(\"is-hidden\");\n    }\n})();\n\n\n\n\n  \nconst randomBookContainer = document.querySelector('.random-book');\nconst randomCoverElement = randomBookContainer.querySelector('#ran-cover');\nconst randomTitleElement = randomBookContainer.querySelector('#ran-title');\nconst randomAuthorElement = randomBookContainer.querySelector('#ran-author');\nconst randomBoookDescriptionElement = randomBookContainer.querySelector('#ran-book-description');\n// const randomBookBuyLink = bookElement.querySelector('#ran-book-buy-link');\n\nasync function getRandomBook() {\n  try {\n    const response = await fetch('https://books-backend.p.goit.global/books/top-books');\n    if (response.ok) {\n      const data = await response.json();\n\n      // Losowy wybór kategorii i książki\n      const randomCategory = data[Math.floor(Math.random() * data.length)];\n      const randomBook = randomCategory.books[Math.floor(Math.random() * randomCategory.books.length)];\n     \n      randomCoverElement.src = randomBook.book_image;  \n      randomTitleElement.textContent = 'Tytuł: ' + randomBook.title;\n      randomAuthorElement.textContent = 'Autor: ' + randomBook.author;\n      console.log(randomBook);\n \n    } else {\n      console.error('Wystąpił błąd podczas pobierania danych z API.');\n    }\n  } catch (error) {\n    console.error('Wystąpił błąd:', error);\n  }\n}\n\ngetRandomBook();\n\n\n// Funkcja do tworzenia nowego diva .book z danymi z API\nfunction createBookDiv(selectedBook) {\n  const bookElement = document.getElementById('book');\n  const bookCover = bookElement.querySelector('#book-cover');\n  const bookTitleElement = bookElement.querySelector('#book-title');\n  const bookAuthorElement = bookElement.querySelector('#book-author');\n  const bookDescriptionElement = bookElement.querySelector('#book-description');\n  const bookBuyLink = bookElement.querySelector('#book-buy-link');\n\n  bookCover.src = selectedBook.book_image;\n  bookTitleElement.textContent = 'Tytuł: ' + selectedBook.title;\n  bookAuthorElement.textContent = 'Autor: ' + selectedBook.author;\n  bookDescriptionElement.textContent = 'Opis: ' + selectedBook.description;\n  bookBuyLink.href = selectedBook.amazon_product_url;\n  bookBuyLink.textContent = 'Kup teraz';\n}\n\n// Pobierz dane z API i wyświetl w divie .book\nasync function fetchAndDisplayBook() {\n  try {\n    const response = await fetch('https://books-backend.p.goit.global/books/top-books');\n    if (response.ok) {\n      const data = await response.json();\n\n      // Losowy wybór kategorii i książki\n      const randomCategory = data[Math.floor(Math.random() * data.length)];\n      const randomBook = randomCategory.books[Math.floor(Math.random() * randomCategory.books.length)];\n\n      createBookDiv(randomBook); // Użyj danych z API do utworzenia diva .book\n    } else {\n      console.error('Wystąpił błąd podczas pobierania danych z API.');\n    }\n  } catch (error) {\n    console.error('Wystąpił błąd:', error);\n  }\n}\n\n// Obsługa kliknięcia na książkę\nconst bookList = document.querySelectorAll('.random-book');\nbookList.forEach(book => {\n  book.addEventListener('click', function () {\n    fetchAndDisplayBook(); // Pobierz i wyświetl dane z API po kliknięciu w div .random-book\n  });\n});\n\n\n\n\n","import { getBooksApi, categoryList, topBooks } from './api.js';\nconst boxCategories = document.querySelector('.books__categories ul');\nconst itemCategory = document.querySelector('.books__list ul');\nconst categoryTitle = document.querySelector('.books__header');\nlet lastCategory;\n\nconst changeCategoryColor = category => {\n  if (lastCategory) {\n    lastCategory.classList.remove('change-category-color');\n  }\n  category.classList.add('change-category-color');\n  lastCategory = category;\n};\n\nconst changeTitleColor = element => {\n  const title = element.split(' ');\n  const lastElement = title.pop();\n  const titleShort = title.join(' ');\n  categoryTitle.innerHTML = `${titleShort} \n        <span class=\"books__header--color\">\n\n        ${lastElement}</span>`;\n};\n\nconst sendCategory = categoryName => {\n  changeCategoryColor(categoryName);\n\n  let categorySelected;\n  if (categoryName.innerHTML === 'All categories') {\n    categorySelected = topBooks;\n    getBooksApi(categorySelected).then(category => {\n      console.log(category.data);\n      return showTopBooks(category.data);\n    });\n  } else {\n    return pageCategory(categoryName.innerHTML);\n  }\n};\n\nboxCategories.addEventListener('click', () => sendCategory(event.target));\n\ngetBooksApi(categoryList)\n  .then(categories => {\n    return allCategory(categories.data);\n  })\n  .catch(error => {\n    console.log(error);\n  });\n\nconst allCategory = categoryName => {\n  categoryName.forEach(element => {\n    const category = document.createElement('li');\n    boxCategories.append(category);\n    category.classList.add('books__categories--item');\n    category.innerHTML = `${element.list_name}`;\n  });\n\n  boxCategories.addEventListener('click', () => sendCategory(event.target));\n};\nconst pageCategory = categoryName => {\n  categorySelected = `category?category=${categoryName}`;\n  getBooksApi(categorySelected).then(category => {\n    return showCategory(category);\n  });\n};\n\nconst showCategory = category => {\n  changeTitleColor(category.data[0].list_name);\n\n  itemCategory.innerHTML = '';\n  category.data.forEach(element => {\n    const book = document.createElement('li');\n    itemCategory.append(book);\n    book.innerHTML = `\n        <div class='books__list--card'><img src=\"${element.book_image}\" class='books__list--image'/>\n        <div class='books__list--description'>\n        <span class='books__list--title'>${element.title}</span>\n        <br/>\n        <span class='books__list--author'>${element.author}</span>\n        </div>\n        </div>`;\n  });\n};\n\nsendCategory(boxCategories.firstElementChild);\n\n// const showTopBooks = TopBooks => {\n//   changeTitleColor('Best Sellers Books');\n\n//   itemCategory.innerHTML = '';\n//   TopBooks.map(book => {\n//     itemCategory.insertAdjacentHTML(\n//       'beforeend',\n//       `\n//             <div class='books__list--card'>\n//                 <span class='books__list--category'>${book.list_name}</span>\n//                 <ul class='books__list--elements'>\n//                 <div class='books__list--element-info'>\n//                    <img src='${book.books[0].book_image}' class='books__list--image'/>\n//                    <div class='books__list--description'>\n//                        <span class='books__list--title'>${book.books[0].title}</span>\n//                        <br/>\n//                        <span class='books__list--author'>${book.books[0].author}</span>\n//                   </div>\n//                 </div>`,\n//     );\n//   });\n\nconst showTopBooks = topBooks => {\n  changeTitleColor('Best Sellers Books');\n\n  itemCategory.innerHTML = '';\n  for (const category of topBooks) {\n    const categoryCard = document.createElement('div');\n    const booksList = document.querySelector('.books__list');\n    booksList.append(categoryCard);\n    categoryCard.classList.add('books__list--category');\n    categoryCard.insertAdjacentHTML(\n      'beforeend',\n      `<span class=\"books__list--category-name\">${category.list_name}</span><ul class=\"books__list--category-set\"></ul>`,\n    );\n    console.log(categoryCard);\n\n    console.log(category.list_name);\n    for (const book of category.books) {\n      let booksOfCategory = document.querySelectorAll('.books__list--category-set');\n      console.log(book);\n      booksOfCategory[booksOfCategory.length - 1].insertAdjacentHTML(\n        'beforeend',\n        `<li class=\"books__list--element-info\"><img src=\"${book.book_image}\"/><div class=\"books__list--element-description\"><span class=\"books__list--title\">${book.title}</span><br/><span class=\"books__list--author\">${book.author}</span></div></li>`,\n      );\n    }\n  }\n};\n\ndocument.addEventListener('click', function (e) {\n  const target = e.target.closest('.see-more-btn');\n  if (target) {\n    const myCategory = target.parentNode.parentNode.firstElementChild.innerHTML;\n    pageCategory(myCategory);\n  }\n});\n"],"names":["refs","openModalBtn","document","querySelector","closeModalBtn","modal","toggleModal","classList","toggle","addEventListener","$2ea800676e6f7669$var$randomBookContainer","$2ea800676e6f7669$var$randomCoverElement","$2ea800676e6f7669$var$randomTitleElement","$2ea800676e6f7669$var$randomAuthorElement","async","$2ea800676e6f7669$var$fetchAndDisplayBook","response","fetch","ok","data","json","randomCategory","Math","floor","random","length","selectedBook","bookElement","getElementById","bookCover","bookTitleElement","bookAuthorElement","bookDescriptionElement","bookBuyLink","src","book_image","textContent","title","author","description","href","amazon_product_url","$2ea800676e6f7669$var$createBookDiv","books","console","error","randomBook","log","$2ea800676e6f7669$var$getRandomBook","querySelectorAll","forEach","book","$lXnOV","parcelRequire","$c4523a6c473e820c$var$boxCategories","$c4523a6c473e820c$var$itemCategory","$c4523a6c473e820c$var$categoryTitle","$c4523a6c473e820c$var$lastCategory","$c4523a6c473e820c$var$changeTitleColor","element","split","lastElement","pop","titleShort","join","innerHTML","$c4523a6c473e820c$var$sendCategory","categoryName","category","categorySelected1","remove","add","$c4523a6c473e820c$var$pageCategory","topBooks","getBooksApi","then","$c4523a6c473e820c$var$showTopBooks","event","target","categoryList","categories","$c4523a6c473e820c$var$allCategory","catch","createElement","append","list_name","categorySelected","$c4523a6c473e820c$var$showCategory","firstElementChild","categoryCard","insertAdjacentHTML","booksOfCategory","e","closest","myCategory","parentNode"],"version":3,"file":"index.7a9d044d.js.map"}