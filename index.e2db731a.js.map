{"mappings":"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","sources":["src/js/mobile-menu.js","src/js/modal.js","src/js/books-list.js"],"sourcesContent":["(() => {\n  const mobileMenu = document.querySelector('.js-menu-container');\n  const openMenuBtn = document.querySelector('.js-open-menu');\n  const closeMenuBtn = document.querySelector('.js-close-menu');\n\n  const toggleMenu = () => {\n    const isMenuOpen = openMenuBtn.getAttribute('aria-expanded') === 'true' || false;\n    openMenuBtn.setAttribute('aria-expanded', !isMenuOpen);\n    mobileMenu.classList.toggle('is-open');\n\n    const scrollLockMethod = !isMenuOpen ? 'disableBodyScroll' : 'enableBodyScroll';\n    bodyScrollLock[scrollLockMethod](document.body);\n  };\n\n  //   openMenuBtn.addEventListener('click', toggleMenu);\n  //   closeMenuBtn.addEventListener('click', toggleMenu);\n\n  // Close the mobile menu on wider screens if the device orientation changes\n  window.matchMedia('(min-width: 768px)').addEventListener('change', e => {\n    if (!e.matches) return;\n    mobileMenu.classList.remove('is-open');\n    openMenuBtn.setAttribute('aria-expanded', false);\n    bodyScrollLock.enableBodyScroll(document.body);\n  });\n})();\n","(() => {\n    const refs = {\n      openModalBtn: document.querySelector(\"[btn-modal-open]\"),\n      closeModalBtn: document.querySelector(\"[close-btn]\"),\n      modal: document.querySelector(\"[data-modal]\"),\n    };\n\n    refs.openModalBtn.addEventListener(\"click\", toggleModal);\n    refs.closeModalBtn.addEventListener(\"click\", toggleModal);\n\n    function toggleModal() {\n      refs.modal.classList.toggle(\"is-hidden\");\n    }\n})();\n\n\n\n\n  \nconst randomBookContainer = document.querySelector('.random-book');\nconst randomCoverElement = randomBookContainer.querySelector('#ran-cover');\nconst randomTitleElement = randomBookContainer.querySelector('#ran-title');\nconst randomAuthorElement = randomBookContainer.querySelector('#ran-author');\nconst randomBoookDescriptionElement = randomBookContainer.querySelector('#ran-book-description');\n// const randomBookBuyLink = bookElement.querySelector('#ran-book-buy-link');\n\nasync function getRandomBook() {\n  try {\n    const response = await fetch('https://books-backend.p.goit.global/books/top-books');\n    if (response.ok) {\n      const data = await response.json();\n\n      // Losowy wybór kategorii i książki\n      const randomCategory = data[Math.floor(Math.random() * data.length)];\n      const randomBook = randomCategory.books[Math.floor(Math.random() * randomCategory.books.length)];\n     \n      randomCoverElement.src = randomBook.book_image;  \n      randomTitleElement.textContent = 'Tytuł: ' + randomBook.title;\n      randomAuthorElement.textContent = 'Autor: ' + randomBook.author;\n      console.log(randomBook);\n \n    } else {\n      console.error('Wystąpił błąd podczas pobierania danych z API.');\n    }\n  } catch (error) {\n    console.error('Wystąpił błąd:', error);\n  }\n}\n\ngetRandomBook();\n\n\n// Funkcja do tworzenia nowego diva .book z danymi z API\nfunction createBookDiv(selectedBook) {\n  const bookElement = document.getElementById('book');\n  const bookCover = bookElement.querySelector('#book-cover');\n  const bookTitleElement = bookElement.querySelector('#book-title');\n  const bookAuthorElement = bookElement.querySelector('#book-author');\n  const bookDescriptionElement = bookElement.querySelector('#book-description');\n  const bookBuyLink = bookElement.querySelector('#book-buy-link');\n\n  bookCover.src = selectedBook.book_image;\n  bookTitleElement.textContent = 'Tytuł: ' + selectedBook.title;\n  bookAuthorElement.textContent = 'Autor: ' + selectedBook.author;\n  bookDescriptionElement.textContent = 'Opis: ' + selectedBook.description;\n  bookBuyLink.href = selectedBook.amazon_product_url;\n  bookBuyLink.textContent = 'Kup teraz';\n}\n\n// Pobierz dane z API i wyświetl w divie .book\nasync function fetchAndDisplayBook() {\n  try {\n    const response = await fetch('https://books-backend.p.goit.global/books/top-books');\n    if (response.ok) {\n      const data = await response.json();\n\n      // Losowy wybór kategorii i książki\n      const randomCategory = data[Math.floor(Math.random() * data.length)];\n      const randomBook = randomCategory.books[Math.floor(Math.random() * randomCategory.books.length)];\n\n      createBookDiv(randomBook); // Użyj danych z API do utworzenia diva .book\n    } else {\n      console.error('Wystąpił błąd podczas pobierania danych z API.');\n    }\n  } catch (error) {\n    console.error('Wystąpił błąd:', error);\n  }\n}\n\n// Obsługa kliknięcia na książkę\nconst bookList = document.querySelectorAll('.random-book');\nbookList.forEach(book => {\n  book.addEventListener('click', function () {\n    fetchAndDisplayBook(); // Pobierz i wyświetl dane z API po kliknięciu w div .random-book\n  });\n});\n\n\n\n\n","import {getBooksApi, categoryList, topBooks} from \"./api.js\"\nconst boxCategories = document.querySelector(\".books__categories ul\")\nconst itemCategory = document.querySelector(\".books__list ul\")\n\nconst sendCategory = (categoryName) => {\n    let categorySelected;\n    if (categoryName === \"All categories\") {\n        categorySelected = topBooks\n        getBooksApi(categorySelected)\n        .then (category => {\n            return showTopBooks(category.data)\n        })\n    } else {\n        categorySelected = `category?category=${categoryName}`;\n        getBooksApi(categorySelected)\n        .then (category => {\n            return showCategory(category)\n        })\n    }\n}\n\ngetBooksApi(categoryList)\n    .then (categories => {\n        return allCategory(categories.data)\n    })\n    .catch(error => {\n        console.log(error)\n    })\n\nconst allCategory = (categoryName) => {\n    categoryName.forEach(element => {\n        const category = document.createElement(\"li\")\n        boxCategories.append(category)\n        category.classList.add(\"books__categories--item\")\n        category.innerHTML = `${element.list_name}`\n    });\n    \n    boxCategories.addEventListener(\"click\", () => sendCategory(event.target.innerHTML))\n}\n\nconst showCategory = (category) => {\n    itemCategory.innerHTML = \"\"\n    category.data.forEach(element => {\n        const book = document.createElement(\"li\")\n        itemCategory.append(book)\n        book.innerHTML = `\n            <img src=\"${element.book_image}\">\n            ${element.title}\n            `\n    })\n}\n\nsendCategory(\"All categories\")\n\nconst showTopBooks = TopBooks => {\n    itemCategory.innerHTML = \"\"\n    TopBooks.map(book => {\n        itemCategory.insertAdjacentHTML(\n        'beforeend',`\n            <div class='books__list--card'>\n                <span class='books__list--category'>${book.list_name}</span>\n                <img src='${book.books[0].book_image}' class='books-list--image'/>\n                <div class='books__list--description'>\n                    <span class='books__list--title'>${book.books[0].title}</span>\n                    <br/>\n                    <span class='books__list--author'>${book.books[0].author}</span>\n                </div>\n                <div class='books__list--see-more'>\n                    <button>see more</button> \n                </div>\n            </div>`,\n        );\n    });\n};\n"],"names":["mobileMenu","document","querySelector","openMenuBtn","window","matchMedia","addEventListener","e","matches","classList","remove","setAttribute","bodyScrollLock","enableBodyScroll","body","refs","openModalBtn","closeModalBtn","modal","toggleModal","toggle","$2ea800676e6f7669$var$randomBookContainer","$2ea800676e6f7669$var$randomCoverElement","$2ea800676e6f7669$var$randomTitleElement","$2ea800676e6f7669$var$randomAuthorElement","async","$2ea800676e6f7669$var$fetchAndDisplayBook","response","fetch","ok","data","json","randomCategory","Math","floor","random","length","selectedBook","bookElement","getElementById","bookCover","bookTitleElement","bookAuthorElement","bookDescriptionElement","bookBuyLink","src","book_image","textContent","title","author","description","href","amazon_product_url","$2ea800676e6f7669$var$createBookDiv","books","console","error","randomBook","log","$2ea800676e6f7669$var$getRandomBook","querySelectorAll","forEach","book","$lXnOV","parcelRequire","$c4523a6c473e820c$var$boxCategories","$c4523a6c473e820c$var$itemCategory","$c4523a6c473e820c$var$sendCategory","categoryName","categorySelected","topBooks","getBooksApi","then","category","$c4523a6c473e820c$var$showTopBooks","$c4523a6c473e820c$var$showCategory","categoryList","categories","$c4523a6c473e820c$var$allCategory","catch","element","createElement","append","add","innerHTML","list_name","event","target","TopBooks","map","insertAdjacentHTML"],"version":3,"file":"index.e2db731a.js.map"}