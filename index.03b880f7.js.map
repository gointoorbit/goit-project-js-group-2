{"mappings":"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","sources":["src/js/modal.js","src/js/books-list.js"],"sourcesContent":["(() => {\n    const refs = {\n      openModalBtn: document.querySelector(\"[btn-modal-open]\"),\n      closeModalBtn: document.querySelector(\"[close-btn]\"),\n      modal: document.querySelector(\"[data-modal]\"),\n    };\n\n    refs.openModalBtn.addEventListener(\"click\", toggleModal);\n    refs.closeModalBtn.addEventListener(\"click\", toggleModal);\n\n    function toggleModal() {\n      refs.modal.classList.toggle(\"is-hidden\");\n    }\n})();\n\n\n\n\n  \nconst randomBookContainer = document.querySelector('.random-book');\nconst randomCoverElement = randomBookContainer.querySelector('#ran-cover');\nconst randomTitleElement = randomBookContainer.querySelector('#ran-title');\nconst randomAuthorElement = randomBookContainer.querySelector('#ran-author');\nconst randomBoookDescriptionElement = randomBookContainer.querySelector('#ran-book-description');\n// const randomBookBuyLink = bookElement.querySelector('#ran-book-buy-link');\n\nasync function getRandomBook() {\n  try {\n    const response = await fetch('https://books-backend.p.goit.global/books/top-books');\n    if (response.ok) {\n      const data = await response.json();\n\n      // Losowy wybór kategorii i książki\n      const randomCategory = data[Math.floor(Math.random() * data.length)];\n      const randomBook = randomCategory.books[Math.floor(Math.random() * randomCategory.books.length)];\n     \n      randomCoverElement.src = randomBook.book_image;  \n      randomTitleElement.textContent = 'Tytuł: ' + randomBook.title;\n      randomAuthorElement.textContent = 'Autor: ' + randomBook.author;\n      console.log(randomBook);\n \n    } else {\n      console.error('Wystąpił błąd podczas pobierania danych z API.');\n    }\n  } catch (error) {\n    console.error('Wystąpił błąd:', error);\n  }\n}\n\ngetRandomBook();\n\n\n// Funkcja do tworzenia nowego diva .book z danymi z API\nfunction createBookDiv(selectedBook) {\n  const bookElement = document.getElementById('book');\n  const bookCover = bookElement.querySelector('#book-cover');\n  const bookTitleElement = bookElement.querySelector('#book-title');\n  const bookAuthorElement = bookElement.querySelector('#book-author');\n  const bookDescriptionElement = bookElement.querySelector('#book-description');\n  const bookBuyLink = bookElement.querySelector('#book-buy-link');\n\n  bookCover.src = selectedBook.book_image;\n  bookTitleElement.textContent = 'Tytuł: ' + selectedBook.title;\n  bookAuthorElement.textContent = 'Autor: ' + selectedBook.author;\n  bookDescriptionElement.textContent = 'Opis: ' + selectedBook.description;\n  bookBuyLink.href = selectedBook.amazon_product_url;\n  bookBuyLink.textContent = 'Kup teraz';\n}\n\n// Pobierz dane z API i wyświetl w divie .book\nasync function fetchAndDisplayBook() {\n  try {\n    const response = await fetch('https://books-backend.p.goit.global/books/top-books');\n    if (response.ok) {\n      const data = await response.json();\n\n      // Losowy wybór kategorii i książki\n      const randomCategory = data[Math.floor(Math.random() * data.length)];\n      const randomBook = randomCategory.books[Math.floor(Math.random() * randomCategory.books.length)];\n\n      createBookDiv(randomBook); // Użyj danych z API do utworzenia diva .book\n    } else {\n      console.error('Wystąpił błąd podczas pobierania danych z API.');\n    }\n  } catch (error) {\n    console.error('Wystąpił błąd:', error);\n  }\n}\n\n// Obsługa kliknięcia na książkę\nconst bookList = document.querySelectorAll('.random-book');\nbookList.forEach(book => {\n  book.addEventListener('click', function () {\n    fetchAndDisplayBook(); // Pobierz i wyświetl dane z API po kliknięciu w div .random-book\n  });\n});\n\n\n\n\n","import { getBooksApi, categoryList, topBooks } from './api.js';\nconst boxCategories = document.querySelector('.books__categories ul');\nconst categoryTitle = document.querySelector('.books__header');\nconst booksList = document.querySelector('.books__list');\nlet lastCategory;\nlet categorySelected;\n\nconst changeCategoryColor = category => {\n  if (lastCategory) {\n    lastCategory.classList.remove('change-category-color');\n  }\n  category.classList.add('change-category-color');\n  lastCategory = category;\n};\n\nconst changeTitleColor = element => {\n  const title = element.split(' ');\n  const lastElement = title.pop();\n  const titleShort = title.join(' ');\n  categoryTitle.innerHTML = `${titleShort} \n        <span class=\"books__header--color\">\n\n        ${lastElement}</span>`;\n};\n\nconst sendCategory = categoryName => {\n  changeCategoryColor(categoryName);\n\n  if (categoryName.innerHTML === 'All categories') {\n    categorySelected = topBooks;\n    getBooksApi(categorySelected).then(category => {\n      console.log(category.data);\n      console.log(window.screen.width);\n      if (window.screen.width <= 768) {\n        showTopBooks(category.data, 1);\n      } else if (window.screen.width <= 1440) {\n        showTopBooks(category.data, 3);\n      } else {\n        showTopBooks(category.data, 5);\n      }\n    });\n  } else {\n    pageCategory(categoryName.innerHTML);\n  }\n};\n\nboxCategories.addEventListener('click', () => sendCategory(event.target));\n\ngetBooksApi(categoryList)\n  .then(categories => {\n    return allCategory(categories.data);\n  })\n  .catch(error => {\n    console.log(error);\n  });\n\nconst allCategory = categoryName => {\n  categoryName.forEach(element => {\n    const category = document.createElement('li');\n    boxCategories.append(category);\n    category.classList.add('books__categories--item');\n    category.innerHTML = `${element.list_name}`;\n  });\n\n  boxCategories.addEventListener('click', () => sendCategory(event.target));\n};\nconst pageCategory = categoryName => {\n  categorySelected = `category?category=${categoryName}`;\n  getBooksApi(categorySelected).then(category => {\n    return showCategory(category);\n  });\n};\n\nconst showCategory = category => {\n  changeTitleColor(category.data[0].list_name);\n\n  booksList.innerHTML = '';\n  category.data.forEach(element => {\n    const book = document.createElement('li');\n    booksList.append(book);\n    book.innerHTML = `\n        <div class='books__list--card'><img src=\"${element.book_image}\" class='books__list--image'/>\n        <div class='books__list--description'>\n        <span class='books__list--title'>${element.title}</span>\n        <br/>\n        <span class='books__list--author'>${element.author}</span>\n        </div>\n        </div>`;\n  });\n};\n\nsendCategory(boxCategories.firstElementChild);\n\nconst showTopBooks = (topBooks, itemNumbers) => {\n  changeTitleColor('Best Sellers Books');\n\n  booksList.innerHTML = '';\n  for (const category of topBooks) {\n    const categoryCard = document.createElement('div');\n\n    booksList.append(categoryCard);\n    categoryCard.classList.add('books__list--category');\n    categoryCard.insertAdjacentHTML(\n      'beforeend',\n      `<span class=\"books__list--category-name\">${category.list_name}</span><ul class=\"books__list--category-set\"></ul><div class'books__list--category-see-more'><button class='see-more-btn'>see more</button></div>`,\n    );\n    console.log(category.list_name);\n    let booksArray = category.books;\n    let adjustedBooksArray = booksArray.slice(0, itemNumbers);\n    console.log(itemNumbers);\n    console.log(adjustedBooksArray);\n    for (const book of adjustedBooksArray) {\n      let booksOfCategory = document.querySelectorAll('.books__list--category-set');\n      booksOfCategory[booksOfCategory.length - 1].insertAdjacentHTML(\n        'beforeend',\n        `<li class=\"books__list--element-info\"><img data-mainId='${book._id}' class='books__list--image' src=\"${book.book_image}\"/><div class=\"books__list--element-description\"><span data-mainId='${book._id}' class=\"books__list--title\">${book.title}</span><br/><span class=\"books__list--author\">${book.author}</span></div></li>`,\n      );\n    }\n  }\n};\n\ndocument.addEventListener('click', function (e) {\n  const target = e.target.closest('.see-more-btn');\n  if (target) {\n    const myCategory = target.parentNode.parentNode.firstElementChild.innerHTML;\n    pageCategory(myCategory);\n  }\n});\n\nconst booksSection = document.querySelector('.books__list');\n\nbooksSection.addEventListener('click', event => {\n  if (\n    event.target.classList.contains('books__list--image') ||\n    event.target.classList.contains('books__list--title')\n  ) {\n    const selectedId = event.target.dataset.mainid;\n    console.log(selectedId);\n    //Tutaj dodać funkcje pobierania danych z api i tworzenia modala\n  }\n});\n"],"names":["refs","openModalBtn","document","querySelector","closeModalBtn","modal","toggleModal","classList","toggle","addEventListener","$2ea800676e6f7669$var$randomBookContainer","$2ea800676e6f7669$var$randomCoverElement","$2ea800676e6f7669$var$randomTitleElement","$2ea800676e6f7669$var$randomAuthorElement","async","$2ea800676e6f7669$var$fetchAndDisplayBook","response","fetch","ok","data","json","randomCategory","Math","floor","random","length","selectedBook","bookElement","getElementById","bookCover","bookTitleElement","bookAuthorElement","bookDescriptionElement","bookBuyLink","src","book_image","textContent","title","author","description","href","amazon_product_url","$2ea800676e6f7669$var$createBookDiv","books","console","error","randomBook","log","$2ea800676e6f7669$var$getRandomBook","querySelectorAll","forEach","book","$lXnOV","parcelRequire","$c4523a6c473e820c$var$boxCategories","$c4523a6c473e820c$var$categoryTitle","$c4523a6c473e820c$var$booksList","$c4523a6c473e820c$var$lastCategory","$c4523a6c473e820c$var$categorySelected","$c4523a6c473e820c$var$changeTitleColor","element","split","lastElement","pop","titleShort","join","innerHTML","$c4523a6c473e820c$var$sendCategory","categoryName","category","remove","add","topBooks","getBooksApi","then","window","screen","width","$c4523a6c473e820c$var$showTopBooks","$c4523a6c473e820c$var$pageCategory","event","target","categoryList","categories","$c4523a6c473e820c$var$allCategory","catch","createElement","append","list_name","$c4523a6c473e820c$var$showCategory","firstElementChild","itemNumbers","categoryCard","insertAdjacentHTML","adjustedBooksArray","slice","booksOfCategory","_id","e","closest","myCategory","parentNode","event1","contains","selectedId","dataset","mainid"],"version":3,"file":"index.03b880f7.js.map"}