{"mappings":"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","sources":["src/js/mobile-menu.js","src/js/modal.js","src/js/books-list.js"],"sourcesContent":["const mobileMenu = document.querySelector('#mobile-menu');\nconst openMenuBtn = document.querySelector('.js-open-menu');\nconst closeMenuBtn = document.querySelector('.js-close-menu');\n\nconst toggleMenu = () => {\n  mobileMenu.classList.toggle('is-open');\n  openMenuBtn.classList.toggle('hidden');\n  closeMenuBtn.classList.toggle('hidden');\n  if (mobileMenu.classList.contains('is-open')) {\n    document.body.style.overflowY = 'hidden';\n  } else {\n    document.body.style.overflowY = 'auto';\n  }\n};\n\nopenMenuBtn.addEventListener('click', toggleMenu);\ncloseMenuBtn.addEventListener('click', toggleMenu);\n","(() => {\n    const refs = {\n      openModalBtn: document.querySelector(\"[btn-modal-open]\"),\n      closeModalBtn: document.querySelector(\"[close-btn]\"),\n      modal: document.querySelector(\"[data-modal]\"),\n    };\n\n    refs.openModalBtn.addEventListener(\"click\", toggleModal);\n    refs.closeModalBtn.addEventListener(\"click\", toggleModal);\n\n    function toggleModal() {\n      refs.modal.classList.toggle(\"is-hidden\");\n    }\n})();\n\n\n\n\n  \nconst randomBookContainer = document.querySelector('.random-book');\nconst randomCoverElement = randomBookContainer.querySelector('#ran-cover');\nconst randomTitleElement = randomBookContainer.querySelector('#ran-title');\nconst randomAuthorElement = randomBookContainer.querySelector('#ran-author');\nconst randomBoookDescriptionElement = randomBookContainer.querySelector('#ran-book-description');\n// const randomBookBuyLink = bookElement.querySelector('#ran-book-buy-link');\n\nasync function getRandomBook() {\n  try {\n    const response = await fetch('https://books-backend.p.goit.global/books/top-books');\n    if (response.ok) {\n      const data = await response.json();\n\n      // Losowy wybór kategorii i książki\n      const randomCategory = data[Math.floor(Math.random() * data.length)];\n      const randomBook = randomCategory.books[Math.floor(Math.random() * randomCategory.books.length)];\n     \n      randomCoverElement.src = randomBook.book_image;  \n      randomTitleElement.textContent = 'Tytuł: ' + randomBook.title;\n      randomAuthorElement.textContent = 'Autor: ' + randomBook.author;\n      console.log(randomBook);\n \n    } else {\n      console.error('Wystąpił błąd podczas pobierania danych z API.');\n    }\n  } catch (error) {\n    console.error('Wystąpił błąd:', error);\n  }\n}\n\ngetRandomBook();\n\n\n// Funkcja do tworzenia nowego diva .book z danymi z API\nfunction createBookDiv(selectedBook) {\n  const bookElement = document.getElementById('book');\n  const bookCover = bookElement.querySelector('#book-cover');\n  const bookTitleElement = bookElement.querySelector('#book-title');\n  const bookAuthorElement = bookElement.querySelector('#book-author');\n  const bookDescriptionElement = bookElement.querySelector('#book-description');\n  const bookBuyLink = bookElement.querySelector('#book-buy-link');\n\n  bookCover.src = selectedBook.book_image;\n  bookTitleElement.textContent = 'Tytuł: ' + selectedBook.title;\n  bookAuthorElement.textContent = 'Autor: ' + selectedBook.author;\n  bookDescriptionElement.textContent = 'Opis: ' + selectedBook.description;\n  bookBuyLink.href = selectedBook.amazon_product_url;\n  bookBuyLink.textContent = 'Kup teraz';\n}\n\n// Pobierz dane z API i wyświetl w divie .book\nasync function fetchAndDisplayBook() {\n  try {\n    const response = await fetch('https://books-backend.p.goit.global/books/top-books');\n    if (response.ok) {\n      const data = await response.json();\n\n      // Losowy wybór kategorii i książki\n      const randomCategory = data[Math.floor(Math.random() * data.length)];\n      const randomBook = randomCategory.books[Math.floor(Math.random() * randomCategory.books.length)];\n\n      createBookDiv(randomBook); // Użyj danych z API do utworzenia diva .book\n    } else {\n      console.error('Wystąpił błąd podczas pobierania danych z API.');\n    }\n  } catch (error) {\n    console.error('Wystąpił błąd:', error);\n  }\n}\n\n// Obsługa kliknięcia na książkę\nconst bookList = document.querySelectorAll('.random-book');\nbookList.forEach(book => {\n  book.addEventListener('click', function () {\n    fetchAndDisplayBook(); // Pobierz i wyświetl dane z API po kliknięciu w div .random-book\n  });\n});\n\n\n\n\n","import {getBooksApi, categoryList, topBooks} from \"./api.js\"\nconst boxCategories = document.querySelector(\".books__categories ul\")\nconst itemCategory = document.querySelector(\".books__list ul\")\nconst categoryTitle = document.querySelector(\".books__header\")\nlet lastCategory;\n\nconst changeCategoryColor = (category) => {\n    if (lastCategory) {\n        lastCategory.classList.remove(\"change-category-color\")\n    }\n    category.classList.add(\"change-category-color\")\n    lastCategory = category\n}\n\nconst changeTitleColor = (element) => {\n    const title = element.split(\" \")\n    const lastElement = title.pop()\n    const titleShort = title.join(\" \")\n    categoryTitle.innerHTML = `${titleShort} \n        <span class=\"books__header--color\">\n        ${lastElement}</span>`\n}\n\nconst sendCategory = (categoryName) => {\n    \n    changeCategoryColor(categoryName)\n\n    let categorySelected;\n    if (categoryName.innerHTML === \"All categories\") {\n        categorySelected = topBooks\n        getBooksApi(categorySelected)\n        .then (category => {\n            return showTopBooks(category.data)\n        })\n    } else {\n        return pageCategory(categoryName.innerHTML)\n    }\n}\n\ngetBooksApi(categoryList)\n    .then (categories => {\n        return allCategory(categories.data)\n    })\n    .catch(error => {\n        console.log(error)\n    })\n\nconst allCategory = (categoryName) => {\n    categoryName.forEach(element => {\n        const category = document.createElement(\"li\")\n        boxCategories.append(category)\n        category.classList.add(\"books__categories--item\")\n        category.innerHTML = `${element.list_name}`\n    });\n    \n    boxCategories.addEventListener(\"click\", () => sendCategory(event.target))\n}\nconst pageCategory = (categoryName) => {\n\n    for (const element of boxCategories.children){\n        if (element.innerHTML === categoryName) {\n            changeCategoryColor(element)\n        }\n    }\n\n    categorySelected = `category?category=${categoryName}`;\n    getBooksApi(categorySelected)\n    .then (category => {\n        return showCategory(category)\n    })\n}\n\nconst showCategory = (category) => {\n\n    changeTitleColor(category.data[0].list_name)\n\n    itemCategory.innerHTML = \"\"\n    category.data.forEach(element => {\n        const book = document.createElement(\"li\")\n        itemCategory.append(book)\n        book.innerHTML = `\n        <div class='books__list--card'><img src=\"${element.book_image}\" class='books__list--image'/>\n        <div class='books__list--description'>\n        <span class='books__list--title'>${element.title}</span>\n        <br/>\n        <span class='books__list--author'>${element.author}</span>\n        </div>\n        </div>`;\n    })\n}\n\nsendCategory(boxCategories.firstElementChild)\n\n\nconst showTopBooks = TopBooks => {\n\n    changeTitleColor(\"Best Sellers Books\")\n\n    itemCategory.innerHTML = \"\"\n    TopBooks.map(book => {\n        itemCategory.insertAdjacentHTML(\n        'beforeend',`\n            <div class='books__list--card'>\n                <span class='books__list--category'>${book.list_name}</span>\n                <img src='${book.books[0].book_image}' class='books-list--image'/>\n                <div class='books__list--description'>\n                    <span class='books__list--title'>${book.books[0].title}</span>\n                    <br/>\n                    <span class='books__list--author'>${book.books[0].author}</span>\n                </div>\n                <div class='books__list--see-more'>\n                    <button onclick=\"window.location.href='#gototitle'\" class=\"see-more-btn\">see more</button>\n                </div>\n            </div>`,\n        );\n    });\n};\n\ndocument.addEventListener('click', function (event) {\n    const target = event.target.closest('.see-more-btn');\n    if (target) {\n        const myCategory = target.parentNode.parentNode.firstElementChild.innerHTML;\n        pageCategory(myCategory)\n    }\n});"],"names":["$f1fc6af85729f52d$var$mobileMenu","document","querySelector","$f1fc6af85729f52d$var$openMenuBtn","$f1fc6af85729f52d$var$closeMenuBtn","$f1fc6af85729f52d$var$toggleMenu","classList","toggle","contains","body","style","overflowY","addEventListener","refs","openModalBtn","closeModalBtn","modal","toggleModal","$2ea800676e6f7669$var$randomBookContainer","$2ea800676e6f7669$var$randomCoverElement","$2ea800676e6f7669$var$randomTitleElement","$2ea800676e6f7669$var$randomAuthorElement","async","$2ea800676e6f7669$var$fetchAndDisplayBook","response","fetch","ok","data","json","randomCategory","Math","floor","random","length","selectedBook","bookElement","getElementById","bookCover","bookTitleElement","bookAuthorElement","bookDescriptionElement","bookBuyLink","src","book_image","textContent","title","author","description","href","amazon_product_url","$2ea800676e6f7669$var$createBookDiv","books","console","error","randomBook","log","$2ea800676e6f7669$var$getRandomBook","querySelectorAll","forEach","book","$lXnOV","parcelRequire","$c4523a6c473e820c$var$boxCategories","$c4523a6c473e820c$var$itemCategory","$c4523a6c473e820c$var$categoryTitle","$c4523a6c473e820c$var$lastCategory","$c4523a6c473e820c$var$changeCategoryColor","category","remove","add","$c4523a6c473e820c$var$changeTitleColor","element","split","lastElement","pop","titleShort","join","innerHTML","$c4523a6c473e820c$var$sendCategory","categoryName","categorySelected1","$c4523a6c473e820c$var$pageCategory","topBooks","getBooksApi","then","$c4523a6c473e820c$var$showTopBooks","categoryList","categories","$c4523a6c473e820c$var$allCategory","catch","createElement","append","list_name","event","target","children","categorySelected","$c4523a6c473e820c$var$showCategory","firstElementChild","TopBooks","map","insertAdjacentHTML","event1","closest","myCategory","parentNode"],"version":3,"file":"index.2fbcac48.js.map"}